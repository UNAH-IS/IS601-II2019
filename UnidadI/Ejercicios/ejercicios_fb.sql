CREATE OR REPLACE PACKAGE PKG_USUARIOS AS
    PROCEDURE P_AGREGAR_LIKE_PUBLICACION(
      P_CODIGO_USUARIO TBL_LIKE_PUBLICACIONES.CODIGO_USUARIO%TYPE,
      P_CODIGO_PUBLICACION TBL_LIKE_PUBLICACIONES.CODIGO_PUBLICACION%TYPE,
      P_MENSAJE_RESULTADO OUT VARCHAR2,
      P_CODIGO_RESULTADO OUT INTEGER
    );
END;


CREATE OR REPLACE PACKAGE BODY PKG_USUARIOS AS
    PROCEDURE P_AGREGAR_LIKE_PUBLICACION(
      P_CODIGO_USUARIO TBL_LIKE_PUBLICACIONES.CODIGO_USUARIO%TYPE,
      P_CODIGO_PUBLICACION TBL_LIKE_PUBLICACIONES.CODIGO_PUBLICACION%TYPE,
      P_MENSAJE_RESULTADO OUT VARCHAR2,
      P_CODIGO_RESULTADO OUT INTEGER
    ) AS
        V_USUARIO_PUBLICACION INTEGER;
        V_CANTIDAD_REGISTROS INTEGER;
        EXCEPTION_NO_AMIGOS EXCEPTION;
    BEGIN
      --verificar si el usuario que dará like es amigo del usuario que hizo el post
      SELECT CODIGO_USUARIO
      INTO V_USUARIO_PUBLICACION
      FROM TBL_PUBLICACIONES
      WHERE CODIGO_PUBLICACION = P_CODIGO_PUBLICACION;

      SELECT COUNT(*)
      INTO V_CANTIDAD_REGISTROS
      FROM TBL_AMIGOS
      WHERE (CODIGO_USUARIO = P_CODIGO_USUARIO AND CODIGO_AMIGO = V_USUARIO_PUBLICACION)
        OR (CODIGO_USUARIO = V_USUARIO_PUBLICACION AND CODIGO_AMIGO = P_CODIGO_USUARIO )
      AND CODIGO_ESTATUS = 1;

      IF (V_CANTIDAD_REGISTROS<=0) THEN
        RAISE EXCEPTION_NO_AMIGOS;
      END IF;

      INSERT INTO TBL_LIKE_PUBLICACIONES (
          CODIGO_USUARIO,
          CODIGO_PUBLICACION,
          FECHA_LIKE_PUBLICACION
      ) VALUES (
          P_CODIGO_USUARIO,
          P_CODIGO_PUBLICACION,
          SYSDATE
      );
      P_CODIGO_RESULTADO:=0;
      P_MENSAJE_RESULTADO:='Registro almacenado con exito';
      COMMIT;
    EXCEPTION
      WHEN NO_DATA_FOUND THEN
        P_MENSAJE_RESULTADO:= 'ERROR, NO HAY PUBLICACIONES CON DICHO CODIGO';
        P_CODIGO_RESULTADO:=1;
        ROLLBACK;
      WHEN EXCEPTION_NO_AMIGOS THEN
        P_MENSAJE_RESULTADO:= 'ERROR, EL USUARIO NO ES AMIGO DE QUIEN HIZO LA PUBLICACION';
        P_CODIGO_RESULTADO:=1;
        ROLLBACK;
      WHEN DUP_VAL_ON_INDEX THEN
        P_MENSAJE_RESULTADO:= 'ERROR, El usuario ya dió like a la publicacion indicada';
        P_CODIGO_RESULTADO:=1;
      WHEN OTHERS THEN
        P_MENSAJE_RESULTADO:= 'ERROR: '||SQLERRM;
        P_CODIGO_RESULTADO:=1;
        ROLLBACK;
    END P_AGREGAR_LIKE_PUBLICACION;
END;



--Probar que el usuario 1 de like a la publicacion 6
  DECLARE
    V_CODIGO_RESULTADO INTEGER;
    V_MENSAJE_RESULTADO VARCHAR2(1000);
  BEGIN
    PKG_USUARIOS.P_AGREGAR_LIKE_PUBLICACION(
      P_CODIGO_USUARIO=>1,
      P_CODIGO_PUBLICACION=>6,
      P_MENSAJE_RESULTADO=>V_MENSAJE_RESULTADO,
      P_CODIGO_RESULTADO=>V_CODIGO_RESULTADO
    );
    DBMS_OUTPUT.PUT_LINE('CODIGO_RESULTADO: '||V_CODIGO_RESULTADO);
    DBMS_OUTPUT.PUT_LINE('MENSAJE_RESULTADO: '||V_MENSAJE_RESULTADO);
  end;

SELECT *
FROM TBL_AMIGOS;


SELECT *
FROM TBL_ESTATUS_SOLICITUDES;


select *
from TBL_AMIGOS
  where codigo_usuario = 3
and CODIGO_AMIGO = 1;



select *
from TBL_PUBLICACIONES;


select *
from TBL_LIKE_PUBLICACIONES
  where CODIGO_USUARIO = 1
and CODIGO_PUBLICACION = 6;

